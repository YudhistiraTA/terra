// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: post.sql

package sqlc

import (
	"context"
)

const fuzzySearchPosts = `-- name: FuzzySearchPosts :many
SELECT id, title, content, user_id, created_at, updated_at
FROM posts
WHERE title % 'search_term' OR content % 'search_term'
ORDER BY
  CASE
    WHEN title % 'search_term' THEN similarity(title, 'search_term')
    ELSE 0
  END DESC,
  CASE
    WHEN content % 'search_term' THEN similarity(content, 'search_term')
    ELSE 0
  END DESC
LIMIT 10
`

func (q *Queries) FuzzySearchPosts(ctx context.Context) ([]Post, error) {
	rows, err := q.db.Query(ctx, fuzzySearchPosts)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Post
	for rows.Next() {
		var i Post
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Content,
			&i.UserID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
