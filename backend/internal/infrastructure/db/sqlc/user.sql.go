// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package sqlc

import (
	"context"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, password, refresh_token, created_at, updated_at FROM users
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.RefreshToken,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateRefreshById = `-- name: UpdateRefreshById :exec
UPDATE users
SET refresh_token = $2
WHERE email = $1
`

type UpdateRefreshByIdParams struct {
	Email        string
	RefreshToken string
}

func (q *Queries) UpdateRefreshById(ctx context.Context, arg UpdateRefreshByIdParams) error {
	_, err := q.db.Exec(ctx, updateRefreshById, arg.Email, arg.RefreshToken)
	return err
}
